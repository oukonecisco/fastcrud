[tool.poetry]
name = "fastcrud"
version = "0.1.0"
description = ""
authors = ["Sekou <sekou.omar.kone@gmail.com>"]
license = "LICENSE"
readme = "README.md"

[tool.poetry.scripts]
demo = "demo.main:api"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = { extras = ["all"], version = "^0.105.0" }
motor = "^3.3.2"
daiquiri = "^3.2.3"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-asyncio = "*"
pytest-env = "*"
pytest-cov = "*"
pylint = "*"
black = "*"
isort = "*"
flake8 = "*"
bandit = "*"
respx = "*"

[tool.poetry.group.dev.dependencies]
ipython = "*"
rich = "*"

[tool.pytest.ini_options]
addopts = "-rA -s -vv --cov=fastcrud --cov-report term-missing"
testpaths = ["tests/unit"]
log_cli = true
log_cli_level = "INFO"
env = []

[tool.bandit]
exclude_dirs = ["tests"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

[tool.pylint.messages_control]
max-line-length = 79
extension-pkg-whitelist = "pydantic"
disable = [
  "too-many-locals",
  "duplicate-code",
  "missing-module-docstring",
  "missing-docstring",
  "unused-argument",
  "no-value-for-parameter",
  "no-member",
  "no-else-return",
  "no-self-argument",
  "line-too-long",
  "fixme",
  "invalid-name",
  "raise-missing-from",
  "protected-access",
  "too-few-public-methods",
  "too-many-arguments",
  "too-many-branches",
  'broad-exception-caught',
  "too-many-ancestors",
]

[tool.black]
line-length = 79 # https://peps.python.org/pep-0008/
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | \.docker
    | \*.egg-info
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 79
force_grid_wrap = 0
multi_line_output = 3
use_parentheses = true
include_trailing_comma = true
ensure_newline_before_comments = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
